%!PS-Adobe-2.0
%%Title: Corrft.ps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Wed Feb 17 02:15:47 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Corrft.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (dhaxton)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Feb 17 02:15:47 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
600 640 M
0 63 V
0 4097 R
0 -63 V
stroke
600 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1.5)]
] -66.7 MCshow
1.000 UL
LTb
2175 640 M
0 63 V
0 4097 R
0 -63 V
stroke
2175 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1)]
] -66.7 MCshow
1.000 UL
LTb
3750 640 M
0 63 V
0 4097 R
0 -63 V
stroke
3750 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.5)]
] -66.7 MCshow
1.000 UL
LTb
5325 640 M
0 63 V
0 4097 R
0 -63 V
stroke
5325 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
6900 640 M
0 63 V
0 4097 R
0 -63 V
stroke
6900 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.5)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
600 4800 N
600 640 L
6300 0 V
0 4160 V
-6300 0 V
Z stroke
LCb setrgbcolor
400 2720 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (Absorption)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
3750 140 M
[ [(Helvetica) 200.0 0.0 true true 0 (Energy \(hartree\))]
] -66.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
2.000 UL
LTb
/Helvetica findfont 200 scalefont setfont
600 1504 M
5 -4 V
54 112 V
53 -25 V
54 111 V
53 -29 V
54 125 V
54 -15 V
53 110 V
54 17 V
54 103 V
53 36 V
54 112 V
54 59 V
53 126 V
54 98 V
54 143 V
53 181 V
54 195 V
53 365 V
54 646 V
54 285 V
53 -522 V
54 -549 V
54 -251 V
53 -226 V
54 -152 V
54 -117 V
53 -131 V
54 -66 V
53 -113 V
54 -43 V
54 -103 V
53 -20 V
54 -107 V
54 5 V
53 -115 V
54 22 V
54 -113 V
53 20 V
54 -97 V
53 3 V
54 -102 V
54 13 V
53 -183 V
54 -120 V
54 -85 V
53 1112 V
54 368 V
54 -478 V
53 -807 V
40 -658 V
23 0 R
44 1221 V
54 -118 V
54 -75 V
53 -178 V
54 113 V
54 -327 V
53 225 V
54 -452 V
54 385 V
49 -794 V
8 0 R
50 736 V
51 -736 V
5 0 R
51 671 V
53 -671 V
1 0 R
53 702 V
54 -612 V
54 592 V
53 -389 V
54 433 V
54 -346 V
53 357 V
54 -269 V
53 291 V
54 -205 V
54 242 V
53 -123 V
54 202 V
54 -105 V
53 136 V
54 -111 V
54 118 V
53 -104 V
54 104 V
53 -90 V
54 96 V
54 -85 V
53 98 V
54 -60 V
54 89 V
53 -64 V
54 52 V
54 -98 V
53 82 V
54 -50 V
53 80 V
54 -46 V
54 50 V
53 -54 V
54 55 V
stroke 5915 1608 M
54 -43 V
53 51 V
54 -48 V
54 51 V
53 -54 V
54 41 V
53 -62 V
54 33 V
54 -48 V
53 46 V
54 -47 V
54 46 V
53 -49 V
54 31 V
54 -51 V
53 46 V
54 -46 V
53 36 V
20 -18 V
stroke
1.000 UL
LT1
/Helvetica findfont 200 scalefont setfont
600 685 M
29 270 V
658 640 L
73 0 R
32 352 V
830 839 L
67 220 V
964 924 L
67 -88 V
67 222 V
61 -418 V
10 0 R
63 712 V
68 -217 V
67 488 V
67 250 V
67 51 V
67 763 V
67 1390 V
67 29 V
67 -1312 V
67 -587 V
67 -89 V
67 -167 V
68 -207 V
67 18 V
67 -210 V
67 55 V
67 -218 V
67 120 V
67 -265 V
67 175 V
67 -286 V
67 170 V
67 -235 V
68 93 V
67 -452 V
67 63 V
67 403 V
67 719 V
67 598 V
67 -252 V
67 -805 V
67 186 V
67 199 V
67 -215 V
68 -7 V
67 -177 V
67 32 V
67 -239 V
67 120 V
67 -345 V
67 284 V
67 -393 V
67 376 V
67 -279 V
67 280 V
68 -199 V
67 260 V
67 -186 V
67 214 V
67 -139 V
67 185 V
67 -81 V
67 176 V
67 -56 V
67 100 V
67 -73 V
68 82 V
67 -72 V
67 80 V
67 -67 V
67 81 V
67 -42 V
67 77 V
67 -62 V
67 32 V
67 -59 V
67 80 V
68 -34 V
67 53 V
67 -53 V
67 55 V
67 -42 V
67 49 V
67 -45 V
67 39 V
67 -58 V
67 29 V
67 -53 V
68 47 V
67 -47 V
67 43 V
67 -61 V
67 42 V
67 -48 V
67 41 V
32 -28 V
stroke
LT2
/Helvetica findfont 200 scalefont setfont
600 1223 M
9 31 V
84 -110 V
84 274 V
84 -85 V
84 255 V
85 1 V
84 202 V
84 68 V
84 216 V
85 165 V
84 245 V
84 441 V
84 1036 V
84 85 V
85 -967 V
84 -467 V
84 -232 V
84 -158 V
85 -179 V
84 -69 V
84 -149 V
84 -20 V
84 -155 V
85 19 V
84 -149 V
84 4 V
84 -154 V
85 -41 V
84 -646 V
84 1425 V
84 318 V
84 -655 V
85 -284 V
84 244 V
84 -49 V
84 -311 V
85 158 V
84 -508 V
84 375 V
81 -757 V
6 0 R
81 692 V
84 -692 V
1 0 R
84 696 V
84 -498 V
84 536 V
85 -346 V
84 375 V
84 -241 V
84 306 V
84 -112 V
85 194 V
84 -126 V
84 138 V
84 -119 V
85 126 V
84 -101 V
84 129 V
84 -76 V
84 73 V
85 -106 V
84 114 V
84 -62 V
84 77 V
85 -72 V
84 80 V
84 -67 V
84 65 V
84 -81 V
85 51 V
84 -78 V
84 70 V
84 -72 V
85 55 V
84 -76 V
84 66 V
59 -57 V
stroke
LT3
/Helvetica findfont 200 scalefont setfont
600 1315 M
68 111 V
106 -84 V
106 211 V
106 -59 V
105 194 V
106 12 V
106 226 V
106 187 V
106 213 V
106 1608 V
105 -14 V
1832 1861 L
106 -216 V
106 -283 V
106 -269 V
2256 666 L
105 505 V
84 -531 V
47 0 R
81 468 V
64 -468 V
120 0 R
28 107 V
106 329 V
106 603 V
105 652 V
106 -248 V
106 -668 V
106 312 V
106 -166 V
106 -193 V
105 -6 V
106 -319 V
106 204 V
4055 947 L
106 319 V
106 -208 V
105 274 V
106 -158 V
106 227 V
106 -55 V
106 177 V
106 -75 V
105 99 V
106 -80 V
106 95 V
106 -49 V
106 84 V
106 -92 V
106 83 V
105 -42 V
106 66 V
106 -56 V
106 66 V
106 -62 V
106 41 V
105 -79 V
106 60 V
106 -68 V
106 49 V
106 -70 V
93 47 V
stroke
LTb
600 4800 N
600 640 L
6300 0 V
0 4160 V
-6300 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Page: 2 2
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
600 640 M
0 63 V
0 4097 R
0 -63 V
stroke
600 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.8)]
] -66.7 MCshow
1.000 UL
LTb
2175 640 M
0 63 V
0 4097 R
0 -63 V
stroke
2175 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.75)]
] -66.7 MCshow
1.000 UL
LTb
3750 640 M
0 63 V
0 4097 R
0 -63 V
stroke
3750 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.7)]
] -66.7 MCshow
1.000 UL
LTb
5325 640 M
0 63 V
0 4097 R
0 -63 V
stroke
5325 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.65)]
] -66.7 MCshow
1.000 UL
LTb
6900 640 M
0 63 V
0 4097 R
0 -63 V
stroke
6900 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.6)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
600 4800 N
600 640 L
6300 0 V
0 4160 V
-6300 0 V
Z stroke
LCb setrgbcolor
400 2720 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (Absorption)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
3750 140 M
[ [(Helvetica) 200.0 0.0 true true 0 (Energy \(hartree\))]
] -66.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
2.000 UL
LTb
/Helvetica findfont 200 scalefont setfont
600 2692 M
527 26 V
536 -350 V
537 -228 V
536 -163 V
536 2120 V
537 703 V
536 -912 V
4882 2349 L
5418 640 L
536 2784 V
537 -226 V
409 -110 V
stroke
1.000 UL
LT1
/Helvetica findfont 200 scalefont setfont
600 1709 M
976 1226 L
671 120 V
671 769 V
671 1370 V
671 1141 V
671 -481 V
5002 2610 L
671 355 V
670 380 V
557 -340 V
stroke
LT2
/Helvetica findfont 200 scalefont setfont
600 2481 M
776 -70 V
2218 1179 L
842 2716 V
842 607 V
4745 3253 L
842 -542 V
842 465 V
471 -52 V
stroke
LT3
/Helvetica findfont 200 scalefont setfont
600 1418 M
857 507 V
2515 3077 L
3574 4318 L
4632 3846 L
5690 2573 L
1059 595 V
151 -45 V
stroke
LTb
600 4800 N
600 640 L
6300 0 V
0 4160 V
-6300 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Page: 3 3
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
600 640 M
0 63 V
0 4097 R
0 -63 V
stroke
600 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1)]
] -66.7 MCshow
1.000 UL
LTb
1230 640 M
0 63 V
0 4097 R
0 -63 V
stroke
1230 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.98)]
] -66.7 MCshow
1.000 UL
LTb
1860 640 M
0 63 V
0 4097 R
0 -63 V
stroke
1860 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.96)]
] -66.7 MCshow
1.000 UL
LTb
2490 640 M
0 63 V
0 4097 R
0 -63 V
stroke
2490 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.94)]
] -66.7 MCshow
1.000 UL
LTb
3120 640 M
0 63 V
0 4097 R
0 -63 V
stroke
3120 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.92)]
] -66.7 MCshow
1.000 UL
LTb
3750 640 M
0 63 V
0 4097 R
0 -63 V
stroke
3750 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.9)]
] -66.7 MCshow
1.000 UL
LTb
4380 640 M
0 63 V
0 4097 R
0 -63 V
stroke
4380 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.88)]
] -66.7 MCshow
1.000 UL
LTb
5010 640 M
0 63 V
0 4097 R
0 -63 V
stroke
5010 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.86)]
] -66.7 MCshow
1.000 UL
LTb
5640 640 M
0 63 V
0 4097 R
0 -63 V
stroke
5640 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.84)]
] -66.7 MCshow
1.000 UL
LTb
6270 640 M
0 63 V
0 4097 R
0 -63 V
stroke
6270 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.82)]
] -66.7 MCshow
1.000 UL
LTb
6900 640 M
0 63 V
0 4097 R
0 -63 V
stroke
6900 440 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.8)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
600 4800 N
600 640 L
6300 0 V
0 4160 V
-6300 0 V
Z stroke
LCb setrgbcolor
400 2720 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (Absorption)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
3750 140 M
[ [(Helvetica) 200.0 0.0 true true 0 (Energy \(hartree\))]
] -66.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
2.000 UL
LTb
/Helvetica findfont 200 scalefont setfont
991 4800 M
536 -243 V
536 -49 V
537 -253 V
536 11 V
536 -271 V
537 50 V
536 -268 V
537 48 V
536 -229 V
536 7 V
537 -244 V
9 1 V
stroke
1.000 UL
LT1
/Helvetica findfont 200 scalefont setfont
600 3542 M
638 124 V
671 -517 V
671 283 V
671 -628 V
671 416 V
670 -678 V
671 402 V
671 -558 V
671 221 V
295 -471 V
stroke
LT2
/Helvetica findfont 200 scalefont setfont
600 4604 M
338 -66 V
842 -353 V
843 -46 V
842 -368 V
842 45 V
842 -355 V
842 11 V
843 -367 V
66 -8 V
stroke
LT3
/Helvetica findfont 200 scalefont setfont
600 2206 M
806 -772 V
2465 2631 L
3523 1029 L
4582 2481 L
5640 640 L
1058 986 V
202 149 V
stroke
LTb
600 4800 N
600 640 L
6300 0 V
0 4160 V
-6300 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 3
